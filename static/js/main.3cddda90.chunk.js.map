{"version":3,"sources":["components/Typewriter.tsx","constants/index.tsx","pages/Navbar/NavbarButton.tsx","pages/Navbar/NavbarButtons.tsx","pages/Navbar/NavbarHamburger.tsx","pages/Navbar/Navbar.tsx","pages/Homepage/Home.tsx","images/intro.png","components/Tooltip.tsx","pages/Homepage/About.tsx","pages/Homepage/Project.tsx","components/Modal.tsx","components/RandomColor.tsx","pages/Homepage/ProjectModal.tsx","images/projects/sketchpad.png","images/projects/todo.png","images/projects/portfolio.png","images/projects/bookworm.png","pages/Homepage/Projects.tsx","pages/Homepage/ContactModal.tsx","services/contactService.tsx","pages/Homepage/Contact.tsx","pages/Footer.tsx","routes/Routes.tsx","components/LoadingScreen.tsx","App.tsx","index.tsx"],"names":["Typewriter","words","index","useRef","useState","currentText","setCurrentText","useEffect","timeOutId","setTimeout","value","charAt","current","clearTimeout","className","navbarButtons","name","link","projectsFilters","NavbarButton","linkPath","setShowMobileMenu","location","useLocation","removeActiveClass","document","getElementsByClassName","hasOwnProperty","classList","remove","handleClick","scrollName","getElementById","add","element","navbarHeight","clientHeight","offsetPosition","offsetTop","window","scrollTo","top","behavior","pathname","id","onClick","to","NavbarButtons","showMobileMenu","map","button","NavbarHamburger","Navbar","navbarRef","status","ref","Home","homeRef","navbarStatus","fill","scrollIntoView","block","Tooltip","text","children","visible","setVisible","onMouseEnter","onMouseLeave","About","aboutRef","src","icon","alt","Project","title","description","img","imgAlt","setShowModal","setShowProject","project","Modal","showModal","modalRef","event","target","RandomColor","min","max","Math","ceil","floor","random","ProjectModal","projectLink","projectTags","projectGithub","tag","key","style","backgroundColor","href","rel","projects","sketchpad","longerDescription","todo","portfolio","bookworm","Projects","projectsRef","showProject","selectedFilters","setSelectedFilters","filteredProjects","setFilteredProjects","forEach","filter","filterElement","includes","contains","console","log","filters","i","length","indexOf","filterProjects","newFiltersList","filterToRemove","handleFilters","TransitionGroup","CSSTransition","timeout","classNames","ContactModal","sendMail","newObject","axios","post","then","response","data","Contact","contactRef","email","setEmail","setName","subject","setSubject","message","setMessage","showSuccessModal","setShowSuccessModal","showErrorModal","setShowErrorModal","errors","setErrors","handleSubmit","e","preventDefault","validEmailRegex","RegExp","test","handleFormValidation","count","Object","values","countErrors","contactService","returnedResponse","type","onChange","placeholder","Footer","AppContainer","getDimensions","height","getBoundingClientRect","offsetBottom","Routes","visibleSection","setVisibleSection","scrolled","setScrolled","setStatus","history","useHistory","sectionRefs","section","checkVisibleSection","headerHeight","scrollPosition","scrollY","selected","find","undefined","replace","pageYOffset","addEventListener","removeEventListener","elementId","toUpperCase","substring","exact","path","LoadingScreen","App","loading","setLoading","a","Promise","resolve","loadData","ReactDOM","render"],"mappings":"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","file":"static/js/main.3cddda90.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Typewriter: React.FC<{\n  words: string;\n}> = ({ words }) => {\n  const index = useRef(0);\n  const [currentText, setCurrentText] = useState(\"\");\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      setCurrentText((value) => value + words.charAt(index.current));\n      index.current++;\n    }, 200);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, [currentText, words]);\n\n  return (\n    <div className=\"Typewriter\">\n      <span>\n        {currentText}\n        <div className=\"pointer\"></div>\n      </span>\n    </div>\n  );\n};\n\nexport default Typewriter;\n","export const navbarButtons = [\n  {\n    name: 'Home',\n    link: '/portfolio-v1',\n  },\n  {\n    name: 'About',\n    link: '/portfolio-v1/about',\n  },\n  {\n    name: 'Projects',\n    link: '/portfolio-v1/projects',\n  },\n  {\n    name: 'Contact',\n    link: '/portfolio-v1/contact',\n  },\n]\n\nexport const projectsFilters = [\n  'all',\n  'javascript',\n  'typescript',\n  'sass',\n  'react',\n  'bootstrap',\n  'material-ui',\n  'firebase',\n  'nodejs',\n]\n","import React, { useEffect } from \"react\";\nimport { FiMail, FiHome, FiPackage, FiUser } from \"react-icons/fi\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface Props {\n  name: string;\n  linkPath: string;\n  setShowMobileMenu: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst NavbarButton: React.FC<Props> = ({\n  name,\n  linkPath,\n  setShowMobileMenu,\n}) => {\n  let location = useLocation();\n\n  //FUNCTIONS\n  //Scroll to element\n  const scrollTo = (name: string) => {\n    let element = document.getElementById(name);\n    let navbarHeight =\n      document.getElementsByClassName(\"Navbar\")[0].clientHeight;\n    let elementPosition = element!.offsetTop;\n    let offsetPosition = elementPosition - navbarHeight;\n\n    window.scrollTo({\n      top: offsetPosition,\n      behavior: \"smooth\",\n    });\n  };\n\n  // Remove \"active\" class from navbar\n  function removeActiveClass() {\n    let navbarButtons = document.getElementsByClassName(\"NavbarButton\");\n    for (let index in navbarButtons) {\n      if (navbarButtons.hasOwnProperty(index)) {\n        navbarButtons[index].classList.remove(\"active\");\n      }\n    }\n  }\n\n  const handleClick = (scrollName: string) => {\n    removeActiveClass();\n    document.getElementById(`${name}-navbar`)?.classList.add(\"active\");\n\n    scrollTo(scrollName);\n    setShowMobileMenu(false);\n  };\n  useEffect(() => {\n    removeActiveClass();\n    if (location.pathname === \"/\") {\n      document.getElementById(\"Home-navbar\")?.classList.add(\"active\");\n    } else if (location.pathname === \"/about\") {\n      document.getElementById(\"About-navbar\")?.classList.add(\"active\");\n    } else if (location.pathname === \"/projects\") {\n      document.getElementById(\"Projects-navbar\")?.classList.add(\"active\");\n    } else if (location.pathname === \"/contact\") {\n      document.getElementById(\"Contact-navbar\")?.classList.add(\"active\");\n    }\n  }, [location.pathname]);\n\n  return (\n    <>\n      <li\n        className=\"NavbarButton\"\n        id={`${name}-navbar`}\n        onClick={() => handleClick(name)}\n      >\n        <Link to={linkPath}>\n          {name === \"Home\" ? (\n            <FiHome />\n          ) : name === \"About\" ? (\n            <FiUser />\n          ) : name === \"Projects\" ? (\n            <FiPackage />\n          ) : name === \"Contact\" ? (\n            <FiMail />\n          ) : (\n            \"\"\n          )}\n          {name}\n        </Link>\n      </li>\n    </>\n  );\n};\n\nexport default NavbarButton;\n","import React from \"react\";\nimport { navbarButtons } from \"../../constants\";\nimport NavbarButton from \"./NavbarButton\";\n\ninterface Props {\n  setShowMobileMenu: React.Dispatch<React.SetStateAction<boolean>>;\n  showMobileMenu: boolean;\n}\n\nconst NavbarButtons: React.FC<Props> = ({\n  showMobileMenu,\n  setShowMobileMenu,\n}) => {\n  return (\n    <ul className={`NavbarButtons ${showMobileMenu ? \"active\" : \"\"}`}>\n      {navbarButtons.map((button) => (\n        <NavbarButton\n          name={button.name}\n          key={button.name}\n          linkPath={button.link}\n          setShowMobileMenu={setShowMobileMenu}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default NavbarButtons;\n","import React from \"react\";\n\ninterface Props {\n  setShowMobileMenu: React.Dispatch<React.SetStateAction<boolean>>;\n  showMobileMenu: boolean;\n}\n\nconst NavbarHamburger: React.FC<Props> = ({\n  showMobileMenu,\n  setShowMobileMenu,\n}) => {\n  const handleClick = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n  return (\n    <div\n      className={`NavbarHamburger ${showMobileMenu ? \"active\" : \"\"}`}\n      onClick={() => handleClick()}\n    >\n      <span className=\"bar\"></span>\n      <span className=\"bar\"></span>\n      <span className=\"bar\"></span>\n    </div>\n  );\n};\n\nexport default NavbarHamburger;\n","import React, { useState } from \"react\";\nimport NavbarButtons from \"./NavbarButtons\";\nimport NavbarHamburger from \"./NavbarHamburger\";\nimport \"../../styles/Navbar.scss\";\n\ninterface Props {\n  navbarRef: React.MutableRefObject<null>;\n  status: string;\n}\n\nconst Navbar: React.FC<Props> = ({ navbarRef, status }) => {\n  // STATES\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n\n  return (\n    <div\n      className={`Navbar ${status === \"top\" ? \"\" : \"scrolled-navbar\"}`}\n      ref={navbarRef}\n    >\n      <div className=\"title\">GY.</div>\n      <NavbarButtons\n        setShowMobileMenu={setShowMobileMenu}\n        showMobileMenu={showMobileMenu}\n      />\n      <NavbarHamburger\n        setShowMobileMenu={setShowMobileMenu}\n        showMobileMenu={showMobileMenu}\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Typewriter from \"../../components/Typewriter\";\nimport { HiSparkles } from \"react-icons/hi\";\nimport { FaArrowRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"../../styles/Home.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  homeRef: React.MutableRefObject<null>;\n  navbarRef: React.MutableRefObject<null>;\n  navbarStatus: string;\n}\n\nconst Home: React.FC<Props> = ({ homeRef, navbarRef, navbarStatus }) => {\n  const textAnimation: string = \"Full Stack Web Developer\";\n\n  const handleClick = () => {\n    document.getElementById(\"Contact\")!.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  };\n\n  return (\n    <section id=\"Home\" ref={homeRef}>\n      <Navbar navbarRef={navbarRef} status={navbarStatus} />\n      <div className=\"greeting header-text\">\n        <h1>\n          Hello! <HiSparkles fill=\"#f1fa8c\" />{\" \"}\n        </h1>\n      </div>\n      <div className=\"name header-text\">\n        <h1>\n          I'm <span className=\"highlight\">Giulia Ye</span>\n        </h1>\n      </div>\n      <div className=\"text-animation header-text\">\n        <Typewriter words={textAnimation} />\n      </div>\n      <div className=\"contact-button header-text\">\n        <button onClick={() => handleClick()}>\n          <Link to=\"contact\">\n            Contact Me\n            <FaArrowRight />\n          </Link>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/intro.aa13e687.png\";","import React, { useState } from \"react\";\n\ninterface Props {\n  text: string;\n  children: React.ReactNode;\n}\n\nconst Tooltip: React.FC<Props> = ({ text, children }) => {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <div\n      className=\"Tooltip\"\n      onMouseEnter={() => {\n        setVisible(true);\n      }}\n      onMouseLeave={() => {\n        setVisible(false);\n      }}\n    >\n      <>{children}</>\n      {visible && <div className=\"tooltip-text\">{text}</div>}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React from \"react\";\nimport icon from \"../../images/intro.png\";\nimport {\n  DiBootstrap,\n  DiFirebase,\n  DiGit,\n  DiJavascript1,\n  DiNodejs,\n  DiReact,\n  DiHtml5,\n  DiCss3,\n} from \"react-icons/di\";\nimport { SiMaterialUi } from \"react-icons/si\";\nimport Tooltip from \"../../components/Tooltip\";\nimport \"../../styles/About.scss\";\n\ninterface Props {\n  aboutRef: React.MutableRefObject<null>;\n}\n\nconst About: React.FC<Props> = ({ aboutRef }) => {\n  return (\n    <section id=\"About\" ref={aboutRef}>\n      <div className=\"about-intro\">\n        <div className=\"text\">\n          <div className=\"title\">\n            let me <span className=\"highlight\">introduce</span> myself\n          </div>\n          <div className=\"description\">\n            Hi! I'm <span className=\"highlight\">Giulia</span> and I like making\n            things that live on the internet.\n            <br />\n            <br />\n            My field of Interest's are{\" \"}\n            <span className=\"highlight\">Web and Mobile Development</span>.\n            <br />\n            <br />\n            Strong Believer of the Open-source-software movement!\n            <br />\n            <br />\n            Let's make something amazing!\n          </div>\n        </div>\n        <div className=\"icon\">\n          <img src={icon} alt=\"about\" />\n        </div>\n      </div>\n\n      <div className=\"skills  icon-list\">\n        <div className=\"title\">\n          professional <span className=\"highlight\">skillset</span>\n        </div>\n        <div className=\"icons\">\n          <Tooltip text=\"HTML5\">\n            <DiHtml5 />\n          </Tooltip>\n          <Tooltip text=\"CSS3\">\n            <DiCss3 />\n          </Tooltip>\n          <Tooltip text=\"Javascript\">\n            <DiJavascript1 />\n          </Tooltip>\n\n          <Tooltip text=\"Nodejs\">\n            <DiNodejs />\n          </Tooltip>\n          <Tooltip text=\"React\">\n            <DiReact />\n          </Tooltip>\n          <Tooltip text=\"Firebase\">\n            <DiFirebase />\n          </Tooltip>\n          <Tooltip text=\"Bootstrap\">\n            <DiBootstrap />\n          </Tooltip>\n          <Tooltip text=\"Material UI\">\n            <SiMaterialUi />\n          </Tooltip>\n          <Tooltip text=\"Git\">\n            <DiGit />\n          </Tooltip>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\ninterface project {\n  title: string;\n  img: string;\n  imgAlt: string;\n  description: string;\n  longerDescription: string;\n  projectLink: string;\n  projectTags: Array<string>;\n  projectGithub: string;\n  id: string;\n}\n\ninterface Props {\n  title: string;\n  description: string;\n  img: string;\n  imgAlt: string;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n  setShowProject: React.Dispatch<React.SetStateAction<project | []>>;\n  project: project;\n  id: string;\n}\n\nconst Project: React.FC<Props> = ({\n  title,\n  description,\n  img,\n  imgAlt,\n  setShowModal,\n  setShowProject,\n  project,\n  id,\n}) => {\n  return (\n    <div\n      id={id}\n      className=\"Project\"\n      onClick={() => {\n        setShowModal(true);\n        setShowProject(project);\n      }}\n    >\n      <div className=\"container\">\n        <img src={img} alt={imgAlt} />\n        <div className=\"text\">\n          <h3>{title}</h3>\n          <p>{description}</p>\n        </div>\n        <div className=\"button\">Learn More</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useRef } from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n  showModal: boolean;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Modal: React.FC<Props> = ({ children, showModal, setShowModal }) => {\n  const modalRef = useRef<HTMLInputElement>(null);\n\n  const closeModal: React.MouseEventHandler<HTMLDivElement> = (event) => {\n    if (event.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n\n  return (\n    <>\n      {showModal && (\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\n          <div className=\"modalContainer\">{children}</div>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Modal;\n","function getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction RandomColor() {\n  const cyan = \"#8be9fd\";\n  const green = \"#50fa7b\";\n  const orange = \"#ffb86c\";\n  const pink = \"#ff79c6\";\n  const purple = \"#bd93f9\";\n  const yellow = \"#f1fa8c\";\n\n  const colors = [cyan, green, orange, pink, purple, yellow];\n  const randomArrayNumber = getRandomInt(1, 6) - 1;\n\n  return colors[randomArrayNumber];\n}\n\nexport default RandomColor;\n","import React from \"react\";\nimport { DiGithubBadge } from \"react-icons/di\";\nimport RandomColor from \"../../components/RandomColor\";\n\ninterface Props {\n  title: string;\n  text: string;\n  img: string;\n  imgAlt: string;\n  projectLink: string;\n  projectTags: Array<string>;\n  projectGithub: string;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ProjectModal: React.FC<Props> = ({\n  title,\n  text,\n  img,\n  imgAlt,\n  projectLink,\n  projectTags,\n  projectGithub,\n  setShowModal,\n}) => {\n  return (\n    <div className=\"ProjectModal\">\n      <span className=\"close-button\" onClick={() => setShowModal(false)}>\n        &times;\n      </span>\n      <img src={img} alt={imgAlt}></img>\n      <div className=\"projectTags\">\n        {projectTags.map((tag, key) => (\n          <button\n            style={{ backgroundColor: RandomColor() }}\n            className=\"projectTag\"\n            key={key}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <div className=\"details\">\n        <div className=\"title\">{title}</div>\n        <p className=\"info\">{text}</p>\n        <a href={projectLink} target=\"_blank\" rel=\"noreferrer\">\n          <div className=\"button\">View</div>\n        </a>\n        <a href={projectGithub} target=\"_blank\" rel=\"noreferrer\">\n          <DiGithubBadge />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default ProjectModal;\n","export default __webpack_public_path__ + \"static/media/sketchpad.45dda9bf.png\";","export default __webpack_public_path__ + \"static/media/todo.236b899c.png\";","export default __webpack_public_path__ + \"static/media/portfolio.c53db65c.png\";","export default __webpack_public_path__ + \"static/media/bookworm.4047e8b6.png\";","import React, { useEffect, useState } from 'react'\nimport Project from './Project'\nimport Modal from '../../components/Modal'\nimport ProjectModal from './ProjectModal'\nimport { projectsFilters } from '../../constants'\nimport '../../styles/Projects.scss'\nimport sketchpad from '../../images/projects/sketchpad.png'\nimport todo from '../../images/projects/todo.png'\nimport portfolio from '../../images/projects/portfolio.png'\nimport bookworm from '../../images/projects/bookworm.png'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\ninterface project {\n  title: string\n  img: string\n  imgAlt: string\n  description: string\n  longerDescription: string\n  projectLink: string\n  projectTags: Array<string>\n  projectGithub: string\n  id: string\n}\n\ninterface Props {\n  projectsRef: React.MutableRefObject<null>\n}\n\nconst projects = [\n  {\n    title: 'Sketchpad',\n    img: sketchpad,\n    imgAlt: 'sketchpad',\n    description: 'A simple site to make some pixel art',\n    longerDescription:\n      'A simple site to make some pixel art. You can change color, erase, change grid size and other nice features!',\n    projectLink: 'https://giuxtaposition.github.io/sketchpad/',\n    projectTags: ['html', 'css', 'javascript', 'react'],\n    projectGithub: 'https://github.com/giuxtaposition/sketchpad',\n    id: 'sketchpad',\n  },\n  {\n    title: 'Todo App',\n    img: todo,\n    imgAlt: 'Todo App',\n    description: 'A Todo List App',\n    longerDescription:\n      'A Todo List App. You can add new tasks, categorize them into projects, filter them based on project or day!',\n    projectLink: 'https://giuxtaposition.github.io/todo-app/',\n    projectTags: [\n      'html',\n      'css',\n      'javascript',\n      'react',\n      'firebase',\n      'material-ui',\n    ],\n    projectGithub: 'https://github.com/giuxtaposition/todo-app',\n    id: 'todo',\n  },\n  {\n    title: 'Portfolio Site',\n    img: portfolio,\n    imgAlt: 'portfolio',\n    description: 'This site. My portfolio.',\n    longerDescription: 'A website to showcase all of my projects.',\n    projectLink: 'https://giuxtaposition.github.io/portfolio-v1',\n    projectTags: ['html', 'sass', 'typescript', 'react', 'nodejs'],\n    projectGithub: 'https://github.com/giuxtaposition/portfolio-v1',\n    id: 'portfolio',\n  },\n  {\n    title: 'Bookworm',\n    img: bookworm,\n    imgAlt: 'bookworm',\n    description: 'Library management site',\n    longerDescription:\n      'Search books and add them to your library. Keep track of read and not read  books',\n    projectLink: 'https://giuxtaposition.github.io/bookworm',\n    projectTags: ['html', 'css', 'javascript', 'react'],\n    projectGithub: 'https://github.com/giuxtaposition/bookworm',\n    id: 'bookworm',\n  },\n]\n\nconst Projects: React.FC<Props> = ({ projectsRef }) => {\n  // STATES\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [showProject, setShowProject] = useState<project | []>([])\n  const [selectedFilters, setSelectedFilters] = useState<Array<string>>(['all'])\n  const [filteredProjects, setFilteredProjects] = useState<Array<project> | []>(\n    []\n  )\n\n  function handleFilters(filter: string) {\n    if (filter === 'all') {\n      // If clicked filter is \"All\", remove all other filters\n      setSelectedFilters(['all'])\n    } else {\n      if (selectedFilters.includes('all')) {\n        // If previous filter list is only \"All\", remove it\n        const newFiltersList = selectedFilters.filter(\n          filterToRemove => filterToRemove !== 'all'\n        )\n        setSelectedFilters(newFiltersList)\n      }\n\n      if (selectedFilters.indexOf(filter) === -1) {\n        //If Filter Not Present: Add it\n        setSelectedFilters(selectedFilters => [...selectedFilters, filter])\n      } else {\n        //If Filter Present: Remove it\n        const newFiltersList = selectedFilters.filter(\n          filterToRemove => filterToRemove !== filter\n        )\n\n        if (!newFiltersList.length) {\n          setSelectedFilters(['all'])\n        } else {\n          setSelectedFilters(newFiltersList)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    // If filter in list add \"active\" class\n    projectsFilters.forEach(filter => {\n      if (document.getElementById(`${filter}-filter`) !== null) {\n        var filterElement: HTMLElement = document.getElementById(\n          `${filter}-filter`\n        )!\n        if (selectedFilters.includes(filter)) {\n          filterElement.classList.add('active')\n        } else {\n          if (filterElement.classList.contains('active')) {\n            filterElement.classList.remove('active')\n          }\n        }\n      } else {\n        console.log('filter not found in filters list')\n      }\n    })\n\n    // Filter projects based on selected filters\n    function filterProjects(projects: Array<project>, filters: Array<string>) {\n      let filteredProjects\n\n      if (filters.includes('all')) {\n        filteredProjects = projects\n      } else {\n        filteredProjects = projects.filter(function (project) {\n          for (var i = 0; i < filters.length; i++) {\n            // If even one filter is not present do not show project\n            if (project.projectTags.indexOf(filters[i]) === -1) {\n              return false\n            }\n          }\n          // If project has all tags show project\n          return true\n        })\n      }\n\n      return filteredProjects\n    }\n\n    setFilteredProjects(filterProjects(projects, selectedFilters))\n  }, [selectedFilters])\n\n  return (\n    <section id='Projects' ref={projectsRef}>\n      <div className='title'>Projects</div>\n      <div className='filter-container'>\n        {projectsFilters.map((filter, key) => (\n          <button\n            id={`${filter}-filter`}\n            className='filter'\n            onClick={() => handleFilters(filter)}\n            key={key}\n          >\n            {filter}\n          </button>\n        ))}\n      </div>\n      <div className='container'>\n        <TransitionGroup className='filtered-projects'>\n          {filteredProjects.map(\n            (project: project, key: React.Key | null | undefined) => (\n              <CSSTransition\n                key={project.id}\n                timeout={500}\n                classNames='filtered-project'\n              >\n                <Project\n                  key={key}\n                  title={project.title}\n                  description={project.description}\n                  img={project.img}\n                  imgAlt={project.imgAlt}\n                  setShowModal={setShowModal}\n                  setShowProject={setShowProject}\n                  project={project}\n                  id={project.id}\n                />\n              </CSSTransition>\n            )\n          )}\n        </TransitionGroup>\n      </div>\n      <Modal showModal={showModal} setShowModal={setShowModal}>\n        <ProjectModal\n          title={(showProject as project).title}\n          text={(showProject as project).longerDescription}\n          img={(showProject as project).img}\n          imgAlt={(showProject as project).imgAlt}\n          projectLink={(showProject as project).projectLink}\n          projectTags={(showProject as project).projectTags}\n          projectGithub={(showProject as project).projectGithub}\n          setShowModal={setShowModal}\n        />\n      </Modal>\n    </section>\n  )\n}\n\nexport default Projects\n","import React, { ReactChild } from \"react\";\n\ninterface Props {\n  title: string;\n  text: string;\n  icon: ReactChild;\n  id: string;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ContactModal: React.FC<Props> = ({\n  title,\n  icon,\n  text,\n  id,\n  setShowModal,\n}) => {\n  return (\n    <div className=\"ContactModal\" id={id}>\n      <div className=\"contact-icon\">{icon}</div>\n      <h1>{title}</h1>\n      <p>{text}</p>\n      <button onClick={() => setShowModal(false)}>Close</button>\n    </div>\n  );\n};\nexport default ContactModal;\n","import axios from \"axios\";\nconst baseUrl = \"https://giuxtaposition.tech/portfolio/contact\";\n\nconst sendMail = (newObject: any) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default sendMail;\n","import React, { useState } from \"react\";\nimport { BiBookmark, BiMailSend, BiMessage, BiUser } from \"react-icons/bi\";\nimport Modal from \"../../components/Modal\";\nimport ContactModal from \"./ContactModal\";\nimport contactService from \"../../services/contactService\";\nimport \"../../styles/Contact.scss\";\nimport { BsCheckCircle, BsExclamationCircle } from \"react-icons/bs\";\n\ninterface Props {\n  contactRef: React.MutableRefObject<null>;\n}\n\nconst Contact: React.FC<Props> = ({ contactRef }) => {\n  //STATES\n  const [email, setEmail] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [subject, setSubject] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [showSuccessModal, setShowSuccessModal] = useState<boolean>(false);\n  const [showErrorModal, setShowErrorModal] = useState<boolean>(false);\n\n  //ERRORS\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  interface Errors {\n    name: string;\n    email: string;\n    subject: string;\n    message: string;\n  }\n\n  const countErrors = (errors: Errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n      (value) => value.length > 0 && (count = count + 1)\n    );\n    return count;\n  };\n\n  const handleFormValidation = () => {\n    const validEmailRegex = RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n\n    errors.name =\n      name.length < 3 ? \"Name must be at least 3 characters long!\" : \"\";\n\n    errors.email = validEmailRegex.test(email)\n      ? \"\"\n      : \"Please provide a valid email!\";\n\n    errors.subject =\n      subject.length < 3 ? \"Subject must be at least 3 characters long!\" : \"\";\n\n    errors.message =\n      message.length < 3\n        ? \"Message must be at least 3 characters long, but please write a little more\"\n        : \"\";\n\n    setErrors({\n      name: errors.name,\n      email: errors.email,\n      subject: errors.subject,\n      message: errors.message,\n    });\n\n    console.log(\n      \" name \" +\n        errors.name +\n        \" email \" +\n        errors.email +\n        \"errors subject\" +\n        errors.subject +\n        \" message\" +\n        errors.message\n    );\n  };\n\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    handleFormValidation();\n\n    if (countErrors(errors) === 0) {\n      const emailObject = {\n        name: name,\n        email: email,\n        subject: subject,\n        message: message,\n      };\n\n      contactService(emailObject).then((returnedResponse) => {\n        if (returnedResponse === \"success\") {\n          setShowSuccessModal(true);\n        } else {\n          setShowErrorModal(true);\n        }\n      });\n    }\n  };\n\n  return (\n    <section id=\"Contact\" ref={contactRef}>\n      <h1 className=\"title\">Contact Me!</h1>\n      <form>\n        <div className=\"container\">\n          <div className=\"name-contact input-contact\">\n            <div className=\"input-title\">\n              <BiUser />\n              <p>Name</p>\n            </div>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Name\"\n            />\n            {errors.name.length > 0 && (\n              <div className=\"contact-error\">{errors.name}</div>\n            )}\n          </div>\n\n          <div className=\"email-contact  input-contact\">\n            <div className=\"input-title\">\n              <BiMailSend />\n              <p>Email</p>\n            </div>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Email\"\n            />\n            {errors.email.length > 0 && (\n              <div className=\"contact-error\">{errors.email}</div>\n            )}\n          </div>\n\n          <div className=\"subject-contact  input-contact\">\n            <div className=\"input-title\">\n              <BiBookmark />\n              <p>Subject</p>\n            </div>\n            <input\n              type=\"text\"\n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n              placeholder=\"Subject\"\n            />\n            {errors.subject.length > 0 && (\n              <div className=\"contact-error\">{errors.subject}</div>\n            )}\n          </div>\n\n          <div className=\"message-contact  input-contact\">\n            <div className=\"input-title\">\n              <BiMessage />\n              <p>Message</p>\n            </div>\n            <textarea\n              name=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Things you want to say...\"\n            ></textarea>\n            {errors.message.length > 0 && (\n              <div className=\"contact-error\">{errors.message}</div>\n            )}\n          </div>\n\n          <button onClick={(e) => handleSubmit(e)}> Submit </button>\n        </div>\n      </form>\n      <Modal showModal={showSuccessModal} setShowModal={setShowSuccessModal}>\n        <ContactModal\n          id=\"success-modal\"\n          title=\"Success!\"\n          text={`Your email was sent successfully. \\n I'll try to get back to you as  soon as possible!`}\n          icon={<BsCheckCircle />}\n          setShowModal={setShowSuccessModal}\n        />\n      </Modal>\n\n      <Modal showModal={showErrorModal} setShowModal={setShowErrorModal}>\n        <ContactModal\n          id=\"error-modal\"\n          title=\"Error!\"\n          text={`Your email was not sent. \\n Please try again`}\n          icon={<BsExclamationCircle />}\n          setShowModal={setShowErrorModal}\n        />\n      </Modal>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"../styles/Footer.scss\";\n\nconst Footer: React.FC = () => {\n  return (\n    <section className=\"Footer\">\n      <a\n        className=\"copyright\"\n        href=\"https://github.com/giuxtaposition/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        © Designed and Built by Giuxtaposition (Giulia Ye)\n      </a>\n    </section>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useHistory, useLocation, Route } from 'react-router-dom'\nimport Home from '../pages/Homepage/Home'\nimport About from '../pages/Homepage/About'\nimport Projects from '../pages/Homepage/Projects'\nimport Contact from '../pages/Homepage/Contact'\nimport Footer from '../pages/Footer'\n\ninterface Props {\n  navbarRef: React.MutableRefObject<null>\n  homeRef: React.MutableRefObject<null>\n  aboutRef: React.MutableRefObject<null>\n  projectsRef: React.MutableRefObject<null>\n  contactRef: React.MutableRefObject<null>\n  navbarStatus: string\n}\n\nconst AppContainer: React.FC<Props> = ({\n  navbarRef,\n  homeRef,\n  aboutRef,\n  projectsRef,\n  contactRef,\n  navbarStatus,\n}) => {\n  return (\n    <>\n      <Home\n        navbarRef={navbarRef}\n        homeRef={homeRef}\n        navbarStatus={navbarStatus}\n      />\n      <About aboutRef={aboutRef} />\n      <Projects projectsRef={projectsRef} />\n      <Contact contactRef={contactRef} />\n      <Footer />\n    </>\n  )\n}\n\nconst getDimensions = (element: HTMLElement) => {\n  const { height } = element.getBoundingClientRect()\n  const offsetTop = element.offsetTop\n  const offsetBottom = offsetTop + height\n\n  return {\n    height,\n    offsetTop,\n    offsetBottom,\n  }\n}\n\nconst Routes: React.FC = () => {\n  // STATES\n  const [visibleSection, setVisibleSection] = useState<string | undefined>('')\n  const [scrolled, setScrolled] = useState(0)\n  const [status, setStatus] = useState<'top' | 'scrolled'>('top')\n\n  // VARIABLES\n  let history = useHistory()\n  let location = useLocation()\n\n  // REFS\n  const navbarRef = useRef(null)\n  const homeRef = useRef(null)\n  const aboutRef = useRef(null)\n  const projectsRef = useRef(null)\n  const contactRef = useRef(null)\n\n  const sectionRefs = [\n    { section: 'Home', ref: homeRef },\n    { section: 'About', ref: aboutRef },\n    { section: 'Projects', ref: projectsRef },\n    { section: 'Contact', ref: contactRef },\n  ]\n\n  //FUNCTIONS\n  // Change pathname on scroll\n  function pathnameChange() {\n    if (visibleSection === 'Home') {\n      if (location.pathname !== '/portfolio-v1') {\n        history.replace((location.pathname = '/portfolio-v1'))\n      }\n    } else if (visibleSection === 'About') {\n      if (location.pathname !== '/portfolio-v1/about') {\n        history.replace((location.pathname = '/portfolio-v1/about'))\n      }\n    } else if (visibleSection === 'Projects') {\n      if (location.pathname !== '/portfolio-v1/projects') {\n        history.replace((location.pathname = '/portfolio-v1/projects'))\n      }\n    } else if (visibleSection === 'Contact') {\n      if (location.pathname !== '/portfolio-v1/contact') {\n        history.replace((location.pathname = '/portfolio-v1/contact'))\n      }\n    }\n  }\n\n  // Change navbar color on scroll\n  function navbarScrollStatus() {\n    setScrolled(window.pageYOffset)\n    if (scrolled >= 120) {\n      if (status !== 'scrolled') {\n        setStatus('scrolled')\n      }\n    } else {\n      if (status !== 'top') {\n        setStatus('top')\n      }\n    }\n  }\n\n  useEffect(() => {\n    const checkVisibleSection = () => {\n      const { height: headerHeight } = getDimensions(navbarRef.current!)\n      const scrollPosition = window.scrollY + headerHeight\n\n      const selected = sectionRefs.find(({ section, ref }) => {\n        const element = ref.current\n        if (element) {\n          const { offsetBottom, offsetTop } = getDimensions(element)\n          return scrollPosition > offsetTop && scrollPosition < offsetBottom\n        }\n      })\n\n      if (selected && selected.section !== visibleSection) {\n        setVisibleSection(selected.section!)\n      } else if (!selected && visibleSection) {\n        setVisibleSection(undefined)\n      }\n    }\n    checkVisibleSection()\n    pathnameChange()\n    navbarScrollStatus()\n    window.addEventListener('scroll', checkVisibleSection)\n    return () => {\n      window.removeEventListener('scroll', checkVisibleSection)\n    }\n  }, [visibleSection])\n\n  // Scroll to correct section at page refresh on specific url\n  useEffect(() => {\n    let elementId = location.pathname\n    elementId =\n      elementId.charAt(1).toUpperCase() +\n      elementId.substring(2, elementId.length)\n    document.getElementById(elementId)?.scrollIntoView()\n  }, [])\n\n  return (\n    <>\n      <Route exact path='/portfolio-v1'>\n        <AppContainer\n          navbarRef={navbarRef}\n          homeRef={homeRef}\n          navbarStatus={status}\n          aboutRef={aboutRef}\n          projectsRef={projectsRef}\n          contactRef={contactRef}\n        />\n      </Route>\n      <Route path='/portfolio-v1/about'>\n        <AppContainer\n          navbarRef={navbarRef}\n          homeRef={homeRef}\n          navbarStatus={status}\n          aboutRef={aboutRef}\n          projectsRef={projectsRef}\n          contactRef={contactRef}\n        />\n      </Route>\n      <Route path='/portfolio-v1/projects'>\n        <AppContainer\n          navbarRef={navbarRef}\n          homeRef={homeRef}\n          navbarStatus={status}\n          aboutRef={aboutRef}\n          projectsRef={projectsRef}\n          contactRef={contactRef}\n        />\n      </Route>\n      <Route path='/portfolio-v1/contact'>\n        <AppContainer\n          navbarRef={navbarRef}\n          homeRef={homeRef}\n          navbarStatus={status}\n          aboutRef={aboutRef}\n          projectsRef={projectsRef}\n          contactRef={contactRef}\n        />\n      </Route>\n    </>\n  )\n}\nexport default Routes\n","import React from \"react\";\nimport { ImSpinner9 } from \"react-icons/im\";\n\nconst LoadingScreen: React.FC = () => {\n  return (\n    <>\n      <div className=\"LoadingScreen\">\n        <ImSpinner9 />\n      </div>\n    </>\n  );\n};\nexport default LoadingScreen;\n","import \"./styles/App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport LoadingScreen from \"./components/LoadingScreen\";\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      await new Promise((resolve) => setTimeout(resolve, 600));\n\n      setLoading((loading) => !loading);\n    };\n\n    loadData();\n  }, []);\n\n  return (\n    <Router>\n      {loading === false ? (\n        <div className=\"App\">\n          <Routes />\n        </div>\n      ) : (\n        <LoadingScreen />\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}